name: .NET Framework Build and Release

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Extract versions from .csproj
      shell: pwsh
      run: |
        $csprojPath = 'DevToolBox/DevToolBox.csproj'
        $csproj = [xml](Get-Content $csprojPath)
        
        $version = $csproj.Project.PropertyGroup.Version
        
        echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append


    # - name: Generate build number
    #   run: echo "REVISION=$(Get-Date -Format 'yyyyMMdd')" | Out-File -FilePath $env:GITHUB_ENV -Append
    #   shell: powershell

    - name: Restore NuGet packages
      run: nuget restore DevToolBox.sln

    - name: Build the project
      run: msbuild DevToolBox.sln /p:Configuration=Release /p:Version=$env:VERSION  /p:Platform="Any CPU"

    - name: Zip the Release build
      run: Compress-Archive -Path ./DevToolBox/bin/Release/* -DestinationPath ./DevToolBox-Portable-$env:VERSION.zip
      shell: pwsh


    - name: Create Release on GitHub
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: "Version ${{ env.VERSION }}"
        draft: false
        prerelease: false


    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./DevToolBox-Portable-${{ env.VERSION }}.zip
        asset_name: DevToolBox-Portable-${{ env.VERSION }}.zip
        asset_content_type: application/zip